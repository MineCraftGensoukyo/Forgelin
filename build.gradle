buildscript {
	repositories {
		jcenter()
		maven {
			name "forge"
			url "http://files.minecraftforge.net/maven/"
		}
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_plugin_version}"
	}
}

plugins {
	id "maven"
	id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: "kotlin"
apply plugin: "net.minecraftforge.gradle.forge"
apply from: "https://github.com/shadowfacts/maven/raw/master/maven.gradle"

version = mod_version

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
	version = mc_version + "-" + forge_version
	runDir = "run"

	mappings = mcp_mappings

	replaceIn "Forgelin.kt"
	replace "@VERSION@", mod_version

	useDepAts = true
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from (sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version, "mcversion": mc_version
	}
	from (sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}

repositories {
	jcenter()
}

dependencies {
	compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version
	compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: kotlin_version
	compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlin_version
	compile group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: kotlin_version
	compile group: "org.jetbrains", name: "annotations", version: annotations_version
	compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-core", version: coroutines_version
	compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-jdk8", version: coroutines_version

	//NPC Scripting
	compile group: "org.jetbrains.kotlin", name: "kotlin-script-runtime", version: kotlin_version
	compile group: "org.jetbrains.kotlin", name: "kotlin-script-util", version: kotlin_version
	compile group: "org.jetbrains.kotlin", name: "kotlin-compiler-embeddable", version: kotlin_version
	compile group: "org.jetbrains.kotlin", name: "kotlin-scripting-compiler-embeddable", version: kotlin_version// https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-scripting-jsr223
	//compile group: 'org.jetbrains.kotlin', name: 'kotlin-scripting-jsr223', version: '1.4.20'


}

jar {
	manifest {
		attributes "FMLCorePlugin": "net.shadowfacts.forgelin.preloader.ForgelinPlugin",
					"FMLCorePluginContainsFMLMod": "true"
	}
}

shadowJar {
	classifier = ""
	dependencies {
		include(dependency("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"))
		// MCG Edit: KotlinStdlibCommons
		include(dependency("org.jetbrains.kotlin:kotlin-stdlib-common:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"))
		include(dependency("org.jetbrains:annotations:${annotations_version}"))
		include(dependency("org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"))
		include(dependency("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${coroutines_version}"))

		//NPC Scripting
		include(dependency("org.jetbrains.intellij.deps:trove4j:${trove4j_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-script-runtime:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-script-util:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-compiler-embeddable:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-scripting-common:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-scripting-compiler-impl-embeddable:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-scripting-jvm:${kotlin_version}"))
		//include(dependency("org.jetbrains.kotlin:kotlin-scripting-jsr223:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-daemon-client:${kotlin_version}"))
		include(dependency("org.jetbrains.kotlin:kotlin-daemon-embeddable:${kotlin_version}"))
	}
	manifest {
		attributes "FMLCorePlugin": "net.shadowfacts.forgelin.preloader.ForgelinPlugin",
					"FMLCorePluginContainsFMLMod": "true"
	}
}

tasks.build.dependsOn shadowJar


artifacts {
	archives shadowJar
}

reobf {
	shadowJar {
		mappingType = "SEARGE"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
tasks.reobfShadowJar.mustRunAfter shadowJar
tasks.build.dependsOn reobfShadowJar


